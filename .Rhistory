evaluate(function(x){x+1}, 6)
evaluate(function(x){x[0], c(8,4,0)})
evaluate(function(x){x[0]}, c(8,4,0))
info()
submit()
evaluate(function(x){which x == 0}, c(8,4,0))
bye()
getwd()
source("C:/Users/HP/Desktop/4th Year 1st Sem/CMSC197 [Intro to Data Science]/Unit 4/Activity/Unit4Activity_BuatagR.R")
setwd("C:/Users/HP/Desktop/4th Year 1st Sem/CMSC197 [Intro to Data Science]/Unit 4/Activity")
acquisition <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XML
# install.packages("xlsx")
# Load the package XML
library(xlsx)
library(rJava)
library(xlsxjars)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data_acquisition")) {
dir.create("data_acquisition")
# URL for xlsx file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
# destination of file inside data folder
dest_path <- "./data_acquisition/acquisition.xlsx"
# Download the file from the URL and put it in the dest_path
download.file(fileUrl, destfile = dest_path, mode = "wb")
}
rowIndex = 18 : 23
colIndex = 7 : 15
dat <- read.xlsx(dest_path, sheetIndex = 1, rowIndex = rowIndex,
colIndex = colIndex, header = TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
}
acquisition()
acquisition <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XML
# install.packages("xlsx")
# Load the package XML
library(xlsx)
library(rJava)
library(xlsxjars)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data_acquisition")) {
dir.create("data_acquisition")
# URL for xlsx file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
# destination of file inside data folder
dest_path <- "./data_acquisition/acquisition.xlsx"
# Download the file from the URL and put it in the dest_path
download.file(fileUrl, destfile = dest_path, mode = "wb")
}
rowIndex = 18 : 23
colIndex = 7 : 15
dat <- read.xlsx(dest_path, sheetIndex = 1, rowIndex = rowIndex,
colIndex = colIndex, header = TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
}
acquisition()
acquisition <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XML
# install.packages("xlsx")
# Load the package XML
library(xlsx)
library(rJava)
library(xlsxjars)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data_acquisition")) {
dir.create("data_acquisition")
# URL for xlsx file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
# destination of file inside data folder
dest_path <- "./data_acquisition/acquisition.xlsx"
# Download the file from the URL and put it in the dest_path
download.file(fileUrl, destfile = dest_path)
}
rowIndex = 18 : 23
colIndex = 7 : 15
dat <- read.xlsx(dest_path, sheetIndex = 1, rowIndex = rowIndex,
colIndex = colIndex, header = TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
}
acquisition()
acquisition <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XML
# install.packages("xlsx")
# Load the package XML
library(xlsx)
library(rJava)
library(xlsxjars)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data_acquisition")) {
dir.create("data_acquisition")
# URL for xlsx file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
# destination of file inside data folder
dest_path <- "./data_acquisition/acquisition.xlsx"
# Download the file from the URL and put it in the dest_path
download.file(fileUrl, destfile = dest_path, mode = "wb")
}
rowIndex = 18 : 23
colIndex = 7 : 15
dat <- read.xlsx(dest_path, sheetIndex = 1, rowIndex = rowIndex,
colIndex = colIndex, header = TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
}
acquisition()
acquisition <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XML
# install.packages("xlsx")
# Load the package XML
library(xlsx)
library(rJava)
library(xlsxjars)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data_acquisition")) {
dir.create("data_acquisition")
}
# URL for xlsx file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
# destination of file inside data folder
dest_path <- "./data_acquisition/acquisition.xlsx"
# Download the file from the URL and put it in the dest_path
download.file(fileUrl, destfile = dest_path)
rowIndex = 18 : 23
colIndex = 7 : 15
dat <- read.xlsx(dest_path, sheetIndex = 1, rowIndex = rowIndex,
colIndex = colIndex, header = TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
}
acquisition()
acquisition <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XML
# install.packages("xlsx")
# Load the package XML
library(xlsx)
library(rJava)
library(xlsxjars)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data_acquisition")) {
dir.create("data_acquisition")
}
# URL for xlsx file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
# destination of file inside data folder
dest_path <- "./data_acquisition/acquisition.xlsx"
# Download the file from the URL and put it in the dest_path
download.file(fileUrl, destfile = dest_path, mode = "wb")
rowIndex = 18 : 23
colIndex = 7 : 15
dat <- read.xlsx(dest_path, sheetIndex = 1, rowIndex = rowIndex,
colIndex = colIndex, header = TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
}
acquisition()
acquisition <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XML
# install.packages("xlsx")
# Load the package XML
library(xlsx)
library(rJava)
library(xlsxjars)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data_acquisition")) {
dir.create("data_acquisition")
}
# URL for xlsx file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
# destination of file inside data_acquisition folder
dest_path <- "./data_acquisition/acquisition.xlsx"
# I got this error when when I download the file using RStudio
# Error in .jcall("RJavaTools", "Ljava/lang/Object;", "invokeMethod", cl,  :
# java.util.zip.ZipException: invalid code -- missing end-of-block
# Apparently, when I searched about this, it is because the download mode is not specified correctly
# So I set the download mode = "wb" or write-binary  since xlsx is basically a binary file (zip)
# Download the file from the URL and put it in the dest_path setting the download mode as write-binary
download.file(fileUrl, destfile = dest_path, mode = "wb")
# Row index to read
row_index = 18 : 23
# Column index to read
col_index = 7 : 15
# Reading the XLSX file
dat <- read.xlsx(dest_path, sheetIndex = 1, rowIndex = rowIndex, colIndex = colIndex, header = TRUE)
cat("The value of sum(dat$Zip*dat$Ext,na.rm=T) is ", sum(dat$Zip*dat$Ext,na.rm=T))
}
acquisition()
acquisition()
acquisition <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XML
# install.packages("xlsx")
# Load the package XML
library(xlsx)
# library(rJava)
# library(xlsxjars)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data_acquisition")) {
dir.create("data_acquisition")
}
# URL for xlsx file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
# destination of file inside data_acquisition folder
dest_path <- "./data_acquisition/acquisition.xlsx"
# I got this error when when I download the file using RStudio
# Error in .jcall("RJavaTools", "Ljava/lang/Object;", "invokeMethod", cl,  :
# java.util.zip.ZipException: invalid code -- missing end-of-block
# Apparently, when I searched about this, it is because the download mode is not specified correctly
# So I set the download mode = "wb" or write-binary  since xlsx is basically a binary file (zip)
# Download the file from the URL and put it in the dest_path setting the download mode as write-binary
download.file(fileUrl, destfile = dest_path, mode = "wb")
# Row index to read
row_index = 18 : 23
# Column index to read
col_index = 7 : 15
# Reading the XLSX file
dat <- read.xlsx(dest_path, sheetIndex = 1, rowIndex = row_index, colIndex = col_index, header = TRUE)
cat("The value of sum(dat$Zip*dat$Ext,na.rm=T) is ", sum(dat$Zip*dat$Ext,na.rm=T))
}
acquisition()
# setwd("C:/Users/HP/Desktop/4th Year 1st Sem/CMSC197 [Intro to Data Science]/Unit 4/Activity")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#PROBLEM #1
# Using download.file() to download the 2006 microdata survey about housing for the State of Idaho,
# USA at https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv and load the data into R. The code
# book, describing the variable names can be downloaded at
# https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf
# After downloading the csv file and loading it into R, write a code to determine how many properties are
# worth $250,000 - $299,999.
property_worth <- function() {
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data")) {
dir.create("data")
}
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dest_path <- "./data/property_housing.csv"
# Download the file from the URL and put it in the dest_path
download.file(url = file_url, destfile = dest_path )
# Read the CSV file
housing_data <- read.csv(dest_path, header = TRUE)
# VAL is the identifier for property value
# VAL == 19; 19 is the corresponding ID for housing properties worth $250,000 - $299,999
# housing_data[which(housing_data$VAL == 19),] expression returns which housing data with value
# of property equal to 19 ($250,000 - $299,999)
# which(housing_data$VAL == 19) expression returns the index of the data if the operation is true
property_total <- housing_data[which(housing_data$VAL == 19),]
# nrow counts the number of rows of housing data which is worth $250,000 - $299,999
# cat similarly functions like print
cat("There are",nrow(property_total),"properties that is worth $250,000 - $299, 999.")
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# PROBLEM #2
# Using download.file() to download the 2006 microdata survey about housing for the State of Idaho at
# https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv, and using the fread() function, load
# the data into an R object DT. The code pwgtp15 is a way to calculate the average value of the variable broken
# down by sex.
survey <- function() {
library(data.table)
if (!file.exists("data")) {
dir.create("data")
}
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
dest_path <- "./data/survey_housing.csv"
download.file(url = file_url, destfile = dest_path )
DT <- fread(dest_path)
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# PROBLEM #3
# Download the Excel spreadsheet on Natural Gas Acquisition Program at
# https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx. Read the rows 18-23 and
# columns 7-15 into R and assign the result to a variable called dat.
acquisition <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XLSX
# install.packages("xlsx")
# Load the package xlsx
library(xlsx)
# library(rJava)
# library(xlsxjars)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data")) {
dir.create("data")
}
# URL for xlsx file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
# destination of file inside data_acquisition folder
dest_path <- "./data/acquisition.xlsx"
# I got this error when when I download the file using RStudio
# Error in .jcall("RJavaTools", "Ljava/lang/Object;", "invokeMethod", cl,  :
# java.util.zip.ZipException: invalid code -- missing end-of-block
# Apparently, when I searched about this, it is because the download mode is not specified correctly
# So I set the download mode = "wb" or write-binary  since xlsx is basically a binary file (zip)
# Download the file from the URL and put it in the dest_path setting the download mode as write-binary
download.file(fileUrl, destfile = dest_path, mode = "wb")
# Row index to read
row_index = 18 : 23
# Column index to read
col_index = 7 : 15
# Reading the XLSX file
dat <- read.xlsx(dest_path, sheetIndex = 1, rowIndex = row_index, colIndex = col_index, header = TRUE)
# cat similarly functions like print
# Printing the value of sum(dat$Zip*dat$Ext,na.rm=T)
cat("The value of sum(dat$Zip*dat$Ext,na.rm=T) is ", sum(dat$Zip*dat$Ext,na.rm=T))
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# PROBLEM #4
# DESCRIPTIION:
# Read the XML data on Baltimore restaurants at
# https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml.
# Write a code to determine how many restaurants have zipcode 21218
# TO RUN:
# Enter baltimore() on the console to get the number of restaurant with 21218 zipcode
baltimore <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XML
# install.packages("XML")
# Load the package XML
library(XML)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data")) {
dir.create("data")
}
# URL for XML file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
# destination of file inside data folder
dest_path <- "./data/restaurants.xml"
# Download the file from the URL and put it in the dest_path
download.file(fileUrl, destfile = dest_path)
# using xmlTreeParse to parse out the XML file in order to access the object
doc <- xmlTreeParse(dest_path, useInternal = TRUE)
# using xmlRoot to get the rootN node of XML root
root_node <- xmlRoot(doc)
# xpathSApply loops through the elements of the root node and get the XML value
zip_code <- xpathSApply(doc = root_node, path = "//zipcode", xmlValue)
# sum calculates the number of restaurant with zipcode = 21218
# printing of result
cat("There are",sum(zip_code == "21218"),"restaurants with 21218 zipcode.")
}
property_worth()
acquisition()
# setwd("C:/Users/HP/Desktop/4th Year 1st Sem/CMSC197 [Intro to Data Science]/Unit 4/Activity")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#PROBLEM #1
# Using download.file() to download the 2006 microdata survey about housing for the State of Idaho,
# USA at https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv and load the data into R. The code
# book, describing the variable names can be downloaded at
# https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf
# After downloading the csv file and loading it into R, write a code to determine how many properties are
# worth $250,000 - $299,999.
property_worth <- function() {
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data")) {
dir.create("data")
}
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
dest_path <- "./data/property_housing.csv"
# Download the file from the URL and put it in the dest_path
download.file(url = file_url, destfile = dest_path )
# Read the CSV file
housing_data <- read.csv(dest_path, header = TRUE)
# VAL is the identifier for property value
# VAL == 19; 19 is the corresponding ID for housing properties worth $250,000 - $299,999
# housing_data[which(housing_data$VAL == 19),] expression returns which housing data with value
# of property equal to 19 ($250,000 - $299,999)
# which(housing_data$VAL == 19) expression returns the index of the data if the operation is true
property_total <- housing_data[which(housing_data$VAL == 19),]
# nrow counts the number of rows of housing data which is worth $250,000 - $299,999
# cat similarly functions like print
cat("There are",nrow(property_total),"properties that is worth $250,000 - $299, 999.")
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# PROBLEM #2
# Using download.file() to download the 2006 microdata survey about housing for the State of Idaho at
# https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv, and using the fread() function, load
# the data into an R object DT. The code pwgtp15 is a way to calculate the average value of the variable broken
# down by sex.
survey <- function() {
library(data.table)
if (!file.exists("data")) {
dir.create("data")
}
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
dest_path <- "./data/survey_housing.csv"
download.file(url = file_url, destfile = dest_path )
DT <- fread(dest_path)
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# PROBLEM #3
# Download the Excel spreadsheet on Natural Gas Acquisition Program at
# https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx. Read the rows 18-23 and
# columns 7-15 into R and assign the result to a variable called dat.
acquisition <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XLSX
# install.packages("xlsx")
# Load the package xlsx
library(xlsx)
# library(rJava)
# library(xlsxjars)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data")) {
dir.create("data")
}
# URL for xlsx file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
# destination of file inside data_acquisition folder
dest_path <- "./data/acquisition.xlsx"
# I got this error when when I download the file using RStudio
# Error in .jcall("RJavaTools", "Ljava/lang/Object;", "invokeMethod", cl,  :
# java.util.zip.ZipException: invalid code -- missing end-of-block
# Apparently, when I searched about this, it is because the download mode is not specified correctly
# So I set the download mode = "wb" or write-binary  since xlsx is basically a binary file (zip)
# Download the file from the URL and put it in the dest_path setting the download mode as write-binary
download.file(fileUrl, destfile = dest_path, mode = "wb")
# Row index to read
row_index = 18 : 23
# Column index to read
col_index = 7 : 15
# Reading the XLSX file
dat <- read.xlsx(dest_path, sheetIndex = 1, rowIndex = row_index, colIndex = col_index, header = TRUE)
# cat similarly functions like print
# Printing the value of sum(dat$Zip*dat$Ext,na.rm=T)
sprintf("The value of sum(dat$Zip*dat$Ext,na.rm=T) is %i.", sum(dat$Zip*dat$Ext,na.rm=T))
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# PROBLEM #4
# DESCRIPTIION:
# Read the XML data on Baltimore restaurants at
# https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml.
# Write a code to determine how many restaurants have zipcode 21218
# TO RUN:
# Enter baltimore() on the console to get the number of restaurant with 21218 zipcode
baltimore <- function() {
# Make sure to install and load the package XML
# I commented out the installation since I already have installed XML
# install.packages("XML")
# Load the package XML
library(XML)
# Creating directory data, if it does not exist yet
# otherwise it will not do anything
if (!file.exists("data")) {
dir.create("data")
}
# URL for XML file
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
# destination of file inside data folder
dest_path <- "./data/restaurants.xml"
# Download the file from the URL and put it in the dest_path
download.file(fileUrl, destfile = dest_path)
# using xmlTreeParse to parse out the XML file in order to access the object
doc <- xmlTreeParse(dest_path, useInternal = TRUE)
# using xmlRoot to get the rootN node of XML root
root_node <- xmlRoot(doc)
# xpathSApply loops through the elements of the root node and get the XML value
zip_code <- xpathSApply(doc = root_node, path = "//zipcode", xmlValue)
# sum calculates the number of restaurant with zipcode = 21218
# printing of result
cat("There are",sum(zip_code == "21218"),"restaurants with 21218 zipcode.")
}
acquisition()
cat("The value of sum(dat$Zip*dat$Ext,na.rm=T) is %i.", sum(dat$Zip*dat$Ext,na.rm=T))
cat("The value of sum(dat$Zip*dat$Ext,na.rm=T) is", sum(dat$Zip*dat$Ext,na.rm=T),".")
cat("The value of sum(dat$Zip*dat$Ext,na.rm=T) is", sum(dat$Zip*dat$Ext,na.rm=T)".")
cat("The value of sum(dat$Zip*dat$Ext,na.rm=T) is", sum(dat$Zip*dat$Ext,na.rm=T))
baltimore()
getwd()
source("C:/Users/HP/Desktop/4th Year 1st Sem/CMSC197 [Intro to Data Science]/First Mini Project/FirstMiniProj.R")
setwd
setwd("C:/Users/HP/Desktop/4th Year 1st Sem/CMSC197 [Intro to Data Science]/First Mini Project")
pollutantmean()
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25
)
complete("specdata", 3)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
cr <- corr("specdata")
head(cr)
summary(cr)
hospital()
